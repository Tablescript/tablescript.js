o = {
  foo: 9,
  ['bar']: 'I have a ham radio',
  ['baz']: fn(x, y) {
    x * y;
  },
  flung: 'flamber',
  sub: {
    subsub: 1,
    subsubsub: [3,4,5],
    subsubsubsub: {
      a: 1,
      b: 2
    }
  },
  a: fn() {
    [10,11,12];
  }
};

assert(o.foo == 9);
assert(o.bar == 'I have a ham radio');
assert(o.baz(2, 3) == 6);

o.goo = 12;
assert(o.goo == 12);
assert(o['flung'] == 'flamber');

assert(o.sub.subsubsubsub.b == 2);
assert(o.a().map(fn(x) { x - 5; }) == [5,6,7]);

o = {
  a: 1,
  b: 2,
  c: 3
};
p = o;
o.a = 99;
assert(p.a == 99);

o = {
  a: 1,
  b: 2,
  c: 3
};
p = {
  ...o,
  d: 4,
  e: 5
};
assert(p == {a: 1, b: 2, c: 3, d: 4, e: 5});

o = {
  b: 2,
  d: 99,
  a: 1,
  e: 7,
  c: 0
};
assert(keys(o) == ['a', 'b', 'c', 'd', 'e']);
