o = {
  "foo": 9,
  "bar": "I have a ham radio",
  "baz": (x, y) => {
    x * y
  },
  flung: "flamber",
  sub: {
    subsub: 1,
    subsubsub: [3,4,5],
    subsubsubsub: {
      a: 1,
      b: 2
    }
  },
  a: () => {
    [10,11,12]
  }
}

system.assert(o.foo == 9)
system.assert(o.bar == 'I have a ham radio')
system.assert(o.baz(2, 3) == 6)

o.goo = 12
system.assert(o.goo == 12)
system.assert(o['flung'] == 'flamber')

system.assert(o.sub.subsubsubsub.b == 2)
system.assert(o.a().map((x) => { x - 5 }) == [5,6,7])

o = {
  a: 1,
  b: 2,
  c: 3
}
p = o
o.a = 99
system.assert(p.a == 99)

o = {
  a: 1,
  b: 2,
  c: 3
}
p = {
  ...o,
  d: 4,
  e: 5
}
system.assert(p == {a: 1, b: 2, c: 3, d: 4, e: 5})

o = {
  b: 2,
  d: 99,
  a: 1,
  e: 7,
  c: 0
}
system.assert(system.keys(o) == ['a', 'b', 'c', 'd', 'e'])
